From: Benjamin Drung <bdrung@debian.org>
Date: Sat, 16 Apr 2022 14:04:18 +0200
Subject: test_aptpkg.py: Fix UnboundLocalError: local variable 'test_repo'

If `/etc/apt/sources.list` does not contain a line with `ubuntu.com` or
`debian.org`, the test cases in `test_aptpkg.py` will fail with
`UnboundLocalError`:

```python
________________________________ test_get_repos ________________________________

    @pytest.mark.skipif(
        not os.path.isfile("/etc/apt/sources.list"), reason="Missing /etc/apt/sources.list"
    )
    def test_get_repos():
        """
        Test aptpkg.get_repos
        """
>       test_repo, comps = get_current_repo()

tests/pytests/functional/modules/test_aptpkg.py:113:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

multiple_comps = False

    def get_current_repo(multiple_comps=False):
        """
        Get a repo currently in sources.list

        multiple_comps:
            Search for a repo that contains multiple comps.
            For example: main, restricted
        """
        with salt.utils.files.fopen("/etc/apt/sources.list") as fp:
            for line in fp:
                if line.startswith("#"):
                    continue
                if "ubuntu.com" in line or "debian.org" in line:
                    test_repo = line.strip()
                    comps = test_repo.split()[3:]
                    if multiple_comps:
                        if len(comps) > 1:
                            break
                    else:
                        break
>       return test_repo, comps
E       UnboundLocalError: local variable 'test_repo' referenced before assignment

tests/pytests/functional/modules/test_aptpkg.py:77: UnboundLocalError
```

So set `test_repo` to `None` to ensure that the variables are defined.
If `test_repo` is still `None` after reading `/etc/apt/sources.list`
skip the test case.

Bug-Debian: https://bugs.debian.org/1006036
Forwarded: https://github.com/saltstack/salt/pull/61954
Signed-off-by: Benjamin Drung <bdrung@debian.org>
---
 tests/pytests/functional/modules/test_aptpkg.py | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/tests/pytests/functional/modules/test_aptpkg.py b/tests/pytests/functional/modules/test_aptpkg.py
index 710c2e0..c62afac 100644
--- a/tests/pytests/functional/modules/test_aptpkg.py
+++ b/tests/pytests/functional/modules/test_aptpkg.py
@@ -61,6 +61,7 @@ def get_current_repo(multiple_comps=False):
         Search for a repo that contains multiple comps.
         For example: main, restricted
     """
+    test_repo = None
     try:
         with salt.utils.files.fopen("/etc/apt/sources.list") as fp:
             for line in fp:
@@ -76,6 +77,8 @@ def get_current_repo(multiple_comps=False):
                         break
     except FileNotFoundError as error:
         pytest.skip("Missing {}".format(error.filename))
+    if not test_repo:
+        pytest.skip("Did not detect an APT repo")
     return test_repo, comps
 
 
@@ -110,8 +113,6 @@ def test_get_repos():
     Test aptpkg.get_repos
     """
     test_repo, comps = get_current_repo()
-    if not test_repo:
-        pytest.skip("Did not detect an apt repo")
     exp_ret = test_repo.split()
     ret = aptpkg.get_repo(repo=test_repo)
     assert ret["type"] == exp_ret[0]
@@ -127,8 +128,6 @@ def test_get_repos_multiple_comps():
     exist in repo.
     """
     test_repo, comps = get_current_repo(multiple_comps=True)
-    if not test_repo:
-        pytest.skip("Did not detect an ubuntu repo")
     exp_ret = test_repo.split()
     ret = aptpkg.get_repo(repo=test_repo)
     assert ret["type"] == exp_ret[0]
